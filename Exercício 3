print('a) Crie uma função em um arquivo externo (outro arquivo .py) para calcular a média e a variância amostral um vetor qualquer, baseada em um loop (for).')
from mediavar import media, variancia
import numpy as np
import math
vetor = np.array([10, 20, 30, 40, 50, 25])
print(vetor)
mediavetor=media(vetor)
print('Vetor' + str(vetor))
print('Média:'+ str(mediavetor))


varianciavetor = variancia(vetor)
print('Vetor' + str(vetor))
print('Variância:'+ str(variancia))
print('-'*40)
print('b) Simule três arrays com a biblioteca numpy de 10, 100, e 1000 valores e com distribuição normal com média 100 e variância 2500. Pesquise na documentação do numpy por funções de simulação')
v1 = np.random.normal(100, math.sqrt(2500), 10)
v2 = np.random.normal(100, math.sqrt(2500), 100)
v3 = np.random.normal(100, math.sqrt(2500), 1000)
v4 = np.random.normal(100,math.sqrt(2500),10000)

print('Vetor com  10 elementos:'+ str(v1))
print('Vetor com 100 elementos:'+ str(v2))
print('Vetor com 1000 elementos:'+ str(v3))

mediavetor1=np.mean(v1)
print('Média do vetor 1 usando o código np.mean:'+ str(mediavetor1))
varvetor1=np.var(v1)
print('Variância do vetor 1 usando o código np.var:'+str(varvetor1))
print(varvetor1)
mediavetor2=np.mean(v2)
print('Média do vetor 2 usando o código np.mean:'+ str(mediavetor2))
varvetor2=np.var(v2)
print('Variância do vetor 1 usando o código np.var:'+str(varvetor2))
mediavetor3=np.mean(v3)
print('Média do vetor 3 usando o código np.mean:'+ str(mediavetor3))
varvetor3=np.var(v3)
print('Variância do vetor 3 usando o código np.var:'+str(varvetor3))
print('-'*40)
print('c) Utilize a função criada na letra a para obter as médias e variâncias dos vetores simulados na letra b.')
mediav1=media(v1)
varv1=variancia(v1)
print('Média do vetor 1:'+ str(mediav1))
print('Variância do vetor 1:'+ str(varv1))
mediav2=media(v2)
varv2=variancia(v2)
print('Média do vetor 2:'+ str(mediav2))
print('Variância do vetor 2:'+ str(varv2))
mediav3=media(v3)
varv3=variancia(v3)
print('Média do vetor 3:'+ str(mediav3))
print('Variância do vetor 3:'+ str(varv3))
print('-'*40)
print('d) Crie histogramas com a biblioteca matplotlib dos vetores simulados com valores de 10, 100, 1000 e 100000.')
import matplotlib.pyplot as plt
fig, axes = plt.subplots(nrows=2, ncols=2)
ax1, ax2, ax3,ax4 = axes.flatten() #muda estrutura linha x coluna e adiciona nessa ordem
ax1.hist(v1, color="tab:pink")
ax1.set_title('10 elementos')
ax2.hist(v2, color="tab:purple")
ax2.set_title('100 elementos')
ax3.hist(v3, color="tab:green")
ax4.set_title('10000 elementos')
ax4.hist(v4, color="tab:orange")
ax4.set_title('100000 elementos')
fig.tight_layout() #tight_layout () se aplica ao objeto Figura como um todo para limpar o preenchimento de espaço em branco
plt.show()
#https://realpython.com/python-matplotlib-guide/
